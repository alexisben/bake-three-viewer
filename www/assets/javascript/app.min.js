class Website {
    constructor() {
        const t = this

        t.test = true

        t.init()
    }
    init() {
        const t = this

        t.objsToDestroy = []

        t.bindEvents()

        if (isMobileTablet)
            $body.addClass('mobile-tablet')
    }

    newPage() {
        const t = this

        t.$main = $('main')

        t.destroyObjs()

        Website.lazyLoad()

        Website.transformSvgImg()

        Website.setSizes()

        Website.setupMailLinks()

        Website.removeHover()
    }
    destroyObjs() {
        const t = this

        t.objsToDestroy.forEach((obj)=> {

            obj.destroy()
        })

        t.objsToDestroy = []

    }

    bindEvents() {
        const t = this

        $window.on('resize', Website.setSizes)

        $window.on('ajax_start_load_page', ()=>{})

        $window.on('ajax_page_loaded', ()=>{})

    }
    static removeHover() {
        const t = this

        if (isMobileTablet)
            $('.hv').removeClass('hv')

    }
    static console(thing) {
        const t = this

        if (t.test)
            console.log(thing)
    }

    static setSizes() {
        const t = this

        ww = $window.width()
        wh = $window.height()

        Website.cropImg()
    }

    static cropImg() {
        const t = this



        $('.crop-img').each(function () {
            let $img = $(this).find('img, video')

            let src = ''

            if ($img.hasClass('lzld') || $img.hasClass('mobile-img')) {
                $img.on('load', ()=> {
                    $img.removeClass('lzld')
                    TM.to($img.parents('.bd-sh'), 0, {className: '-=bd-sh', delay: .4})
                })
                if (ww < 720) {
                    src = ($img.hasClass('mobile-img') && $img.attr('data-src-mobile') != '') ? $img.attr('data-src-mobile') : $img.attr('data-src-medium')
                } else {
                    src = $img.attr('data-src')
                }
                $img.attr('src', src)
            }

            if ($img.hasClass('loaded')) {
                simpleCrop($img)
            } else {
                cropImage($img, ()=>$img.addClass('loaded'))
            }
        })

        $window.trigger('resized')
    }

    static lazyLoad() {
        $('.lzld').each(function () {
            let $img = $(this)

            if(!$img.parents('.crop-img').length > 0){
                TM.set($img, {opacity: 0})

                $img.on('load', ()=>TM.set($img, {opacity: 1}))

                $img.attr('src', $img.attr('data-src'))

                $img.removeClass('lzld')
            }
        })
    }

    static setupMailLinks() {
        const t = this

        const regex = '[at]'

        $('.safe-mail-link').each(function () {
            let $lk = $(this)

            if($lk.attr('href').indexOf(regex) > -1){
                $lk.attr('href', $lk.attr('href').replace(regex, '@'))
            }

            if($lk.text().indexOf(regex) > -1){
                $lk.text($lk.text().replace(regex, '@'))
            }
        })
    }

    static  transformSvgImg() {
        const t = this

        $('img.svg').each(function () {
            let $img = $(this),
                imgID = $img.attr('id'),
                imgClass = $img.attr('class'),
                imgURL = $img.attr('src')

            $.get(imgURL, (data)=> {
                let $svg = $(data).find('svg')
                if (typeof imgID !== 'undefined') {
                    $svg = $svg.attr('id', imgID)
                }
                if (typeof imgClass !== 'undefined') {
                    $svg = $svg.attr('class', imgClass + ' replaced-svg')
                }
                $svg = $svg.removeAttr('xmlns:a')
                $img.replaceWith($svg)
            }, 'xml')
        })
    }
    static disableScroll(){
        if (window.addEventListener) {
            window.addEventListener('DOMMouseScroll', Website.wheel, {passive: true});
        }
        window.onmousewheel = document.onmousewheel = Website.wheel
        document.onkeydown = keydown
        window.SCROLL_ENABLE = false
    }
    static enableScroll(){
        if (window.removeEventListener) {
            window.removeEventListener('DOMMouseScroll', Website.wheel, {passive: true})
        }
        window.onmousewheel = document.onmousewheel = document.onkeydown = null

        setTimeout(function(){
            window.SCROLL_ENABLE = true
        }, 100)
    }
    static wheel(e){
        Website.preventDefault(e)
    }
    static preventDefault(e){
        e = e || window.event
        if (e.preventDefault)
            e.preventDefault()
        e.returnValue = false
    }
    static keyDown(e){
        let  keys = [37, 38, 39, 40, 32]

        key.forEach((key)=>{
            if (e.keyCode === key) {
                Website.preventDefault(e)
                return
            }
        })
    }
}

let $window,
    $document,
    $header,
    $body,
    $loader,
    $footer,
    $wrapper

$(window).on('load',()=>{

    $window = $(window)

    document = $(document)

    $header = $('header')

    $body = $('body')

    $loader = $('#main-loader')

    $footer = $('footer')

    $wrapper = $('#wrapper')

    if(isIE){
        $body.addClass('ie')
    }
    if(isSafari){
        $body.addClass('safari')
    }
    if(isFirefox){
        $body.addClass('firefox')
    }

    console.log($window)

    window.website = new Richelieu()
})

let TM = TweenMax,
    ww, wh

const isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0,                    // Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)
    isFirefox = typeof InstallTrigger !== 'undefined',                                        // Firefox 1.0+
    isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0, // At least Safari 3+: "[object HTMLElementConstructor]"
    isChrome = !!window.chrome && !isOpera,                                                   // Chrome 1+
    isIE = /*@cc_on!@*/false || !!document.documentMode,                                    // At least IE6
    isEdge = navigator.userAgent.indexOf(' Edge/') >= 0;


window.mobileAndTabletcheck = function() {
    var check = false;
    (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);
    return check;
}
const isTouch = window.isMobileTablet;

window.isMobileTablet = window.mobileAndTabletcheck();

window.mobilecheck = function() {
    var check = false;
    (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);
    return check;
}
if(window.isMobileTablet){
    window.isMobile = window.mobilecheck();
}

window.isRetina = (window.devicePixelRatio > 1 || (window.matchMedia && window.matchMedia("(-webkit-min-device-pixel-ratio: 1.5),(-moz-min-device-pixel-ratio: 1.5),(min-device-pixel-ratio: 1.5)").matches));


class Richelieu extends Website{
    constructor(){
        super()
    }
    init(){
        super.init()

        const t=this

        t.Experience = new Experience()
    }
}



//TODO Réecrire ces scripts en ES6 et en beau
const Events = {
    DOWN : isTouch ? "touchstart" : "mousedown",
    UP : isTouch ? "touchend" : "mouseup",
    CLICK : "click",
    MOVE : isTouch ? "touchmove" : "mousemove",
    ENTER : "mouseenter",
    LEAVE : "mouseleave",
    OVER : "mouseover",
    OUT : "mouseout",
    WHEEL : "mousewheel DOMMouseScroll MozMousePixelScroll",
    SCROLL : "scroll"
}


function getParameterByName(name, url) {
    if (!url) {
        url = window.location.href;
    }
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
}

function slugify (text) {
    const a = 'àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/_,:;'
    const b = 'aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------'
    const p = new RegExp(a.split('').join('|'), 'g')

    return text.toString().toLowerCase()
        .replace(/\s+/g, '-')           // Replace spaces with -
        .replace(p, c =>
            b.charAt(a.indexOf(c)))     // Replace special chars
        .replace(/&/g, '-and-')         // Replace & with 'and'
        .replace(/[^\w\-]+/g, '')       // Remove all non-word chars
        .replace(/\-\-+/g, '-')         // Replace multiple - with single -
        .replace(/^-+/, '')             // Trim - from start of text
        .replace(/-+$/, '')             // Trim - from end of text
}


function vlLoadImages ($tabImg, completeCB, progressCB)
{
    var isJQuery = typeof $tabImg['jquery'] !== 'undefined';
    var total = $tabImg.length;
    var loaded = 0;
    var startTime = new Date();

    if (total == 0)
    {
        if (progressCB)
            progressCB (1);
        if (completeCB)
            complete ();
        return;
    }

    $tabImg.each (function () {
        var img = new Image();
        var url = isJQuery ? $(this).attr('src') : this;
        if (!url)
        {
            imgLoaded();
            return;
        }

        img.src = url;
        if (img.complete || img.naturalWidth)
        {
            imgLoaded.apply(img);
        }
        else
        {
            img = new Image();
            img.onload = imgLoaded;
            img.onerror = imgLoaded;
            img.onabort = imgLoaded;
            img.src = url;
        }
    });

    function imgLoaded ()
    {
        loaded++;
        if (progressCB)
        {
            progressCB (loaded / total);
        }
        if (loaded == total && completeCB)
        {
            complete ();
        }
    }

    function complete ()
    {
        var now = new Date ();
        var time = now - startTime;
        if ( time >0 && time < 1000)
        {
            setTimeout (completeCB, 1000 - time);
        }
        else
            completeCB ();
    }
}







function cropImage ($img, complete)
{

    if (typeof complete == 'undefined')
        complete = function(){};

    vlLoadImages($img, function() {
        var w, h, ow, oh, mw, mh;
        $img.css({width: 'auto',height: 'auto'});
        mw = $img.parent().width();
        mh = $img.parent().height();
        ow = $img.width();
        oh = $img.height();

        w = mw;
        h = oh / ow * mw;

        if (h < mh)
        {
            h = mh;
            w = ow / oh * mh;
        }

        $img.css({
            position: 'relative',
            width: w,
            height: h,
            left: (mw - w) / 2,
            top: (mh - h) / 2
        });


        if(complete) complete ();

    });
}

function simpleCrop ($img, complete, ow, oh)
{
    var w, h, ow, oh, mw, mh;
    $img.css({width: 'auto',height: 'auto'});
    mw = $img.parent().width();
    mh = $img.parent().height();
    ow = ow ? ow : $img.width();
    oh = oh ? oh : $img.height();

    w = mw;
    h = oh / ow * mw;

    if (h < mh)
    {
        h = mh;
        w = ow / oh * mh;
    }

    $img.css({
        position: 'relative',
        width: w,
        height: h,
        left: (mw - w) / 2,
        top: (mh - h) / 2
    });

    if(complete) complete ();
}



function shuffle(a) {
    for (let i = a.length; i; i--) {
        let j = Math.floor(Math.random() * i);
        [a[i - 1], a[j]] = [a[j], a[i - 1]];
    }
}



function cropSprite (spr, mw, mh) {

    setCropSize(spr, mw, mh)

    spr.x =  (mw - spr.width) / 2
    spr.y = (mh - spr.height) / 2

}

function setCropSize(spr, mw, mh){
    let w, h,
        ow = spr.width,
        oh = spr.height

    if(spr.video){
        ow = spr.video.videoWidth || spr.width
        oh = spr.video.videoHeight || spr.height
    }

    w = mw;
    h = oh / ow * mw;

    if (h < mh) {
        h = mh;
        w = ow / oh * mh;
    }

    spr.width = w
    spr.height = h
}


function cropSpriteCenter (spr, mw, mh)
{

    setCropSize(spr, mw, mh)

    spr.anchor.set(.5)
    spr.x = mw/2
    spr.y = mh/2

}


function defval(_val, _default){
    return typeof _val !== 'undefined' ? _val : _default;
}

const CSS_TRANSFORM = (function(){
    let prefixes = 'transform webkitTransform mozTransform oTransform msTransform'.split(' ')
        , el = document.createElement('div')
        , cssTransform
        , i = 0
    while( cssTransform === undefined ){
        cssTransform = document.createElement('div').style[prefixes[i]] != undefined ? prefixes[i] : undefined
        i++
    }
    return cssTransform
})()


function slugify(text) {

    let a = 'àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/_,:;';
    let b = 'aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------';
    let p = new RegExp(a.split('').join('|'), 'g');

    return text.toString().toLowerCase().trim()
        .replace(/\s+/g, '')
        .replace(p, function (c) {
            return b.charAt(a.indexOf(c));
        })
        .replace(/&/g, '')
        .replace(/[^\w\-]+/g, '')
        .replace(/\-\-+/g, '')
        .replace(/\-/g, '')
        .replace(/^-+/, '')
        .replace(/-+$/, '');
}

const requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function(callback){ window.setTimeout(callback, 1000/60) }

Array.prototype.move = function (from, to) {
    this.splice(to, 0, this.splice(from, 1)[0]);
};



// Converts from degrees to radians.
Math.radians = function(degrees) {
    return degrees * Math.PI / 180;
};

// Converts from radians to degrees.
Math.degrees = function(radians) {
    return radians * 180 / Math.PI;
};
class ThreeContainer{
    constructor(){
        const t=this

        console.log('experience in construction...')

        t.createScene()

        t.createCamera()

        t.createRenderer()

        t.time = 0

        // t.animate()

        // t.createTest()

        t.addHelpers()

        t.createSceneCube()

        t.addOrbitControls()

    }
    createSceneCube(){
        const t=this

        t.sceneCube = new THREE.Mesh(
            new THREE.BoxGeometry(300,300,300),
            new THREE.MeshBasicMaterial({side:THREE.DoubleSide, color: 0xdddddd})
        )

        t.scene.add(t.sceneCube)


    }
    createScene(){
        const t=this

        t.scene = new THREE.Scene()
    }
    createCamera(){
        const t=this

        // t.camera = new THREE.PerspectiveCamera( 25, window.innerWidth / window.innerHeight, 1, 1000 )
        t.camera = new THREE.PerspectiveCamera( 50, window.innerWidth / window.innerHeight, 1, 2000 )

        // t.camera.position.x = 10
        // t.camera.position.y = 0
        // t.camera.position.z = 5

        // t.camera.lookAt(new THREE.Vector3(0,0,0))
    }

    setupCamera(settings){
        const t=this

        // if(!target)
        //     target =  new THREE.Vector3(1,2,0)

        let position = defval(settings.position, new THREE.Vector3(-4, 3, -10))
        let rotation = defval(settings.rotation, null)
        let target = defval(settings.target, false)
        let mouseEffect = defval(settings.mouseEffect, false)
        let fov = defval(settings.fov, 50)

        t.camera.fov = fov

        if(target)
            t.cameraTargetPos = target

        t.camPos = position

        t.camera.position.set(t.camPos.x, t.camPos.y, t.camPos.z)

        if(rotation)
            t.camera.rotation.set(rotation.x,rotation.y,rotation.z)


        t.camera.updateProjectionMatrix()

        if(!mouseEffect) return;

        t.mouse = {}
        document.addEventListener('mousemove', function(event){
            t.mouse.x	= (event.clientX / window.innerWidth ) - 0.5;
            t.mouse.y	= (event.clientY / window.innerHeight) - 0.5;

            t.camera.position.z += (t.mouse.x  - t.camera.position.z) * (1.1) + t.camPos.z;
            t.camera.position.y += (t.mouse.y  - t.camera.position.y) * (1.1) + t.camPos.y;

            if(target) t.camera.lookAt(t.cameraTargetPos.x, t.cameraTargetPos.y, t.cameraTargetPos.z)
        }, false);

    }

    createRenderer(){
        const t=this

        t.renderer = new THREE.WebGLRenderer( { antialias: true} )
        t.renderer.setPixelRatio( 1 )
        t.renderer.setSize( window.innerWidth, window.innerHeight )
        t.renderer.gammaInput = true
        t.renderer.gammaOutput = true
        t.renderer.shadowMap.enabled = true

        $body.append(t.renderer.domElement)

        console.log('experience rendering...')
    }

    createTest(){
        const t=this

        t.sphereTest = new THREE.Mesh(
            new THREE.SphereGeometry(1, 16, 16),
            new THREE.MeshBasicMaterial( {color: 0xffffff, wireframe: true} )
        )

        t.scene.add(t.sphereTest)

    }

    addHelpers(){
        const t=this

        t.axesHelper = new THREE.AxesHelper( 5 )
        t.scene.add( t.axesHelper )
    }

    addOrbitControls(){
        const t=this

        t.controls = new THREE.OrbitControls( t.camera, t.renderer.domElement )

    }
    animate(){
        const t=this

        t.time = Date.now()*0.0001

        t.renderer.render( t.scene, t.camera )

        requestAnimationFrame( t.animate.bind(t) )

        if(t.controls)
            t.controls.update()

    }


}
let camera;


class Experience extends ThreeContainer{
  constructor(){
    super()
    const t=this

    t.mainMaterial = new THREE.MeshBasicMaterial( {color: 0xffffff,side:THREE.DoubleSide})

    t.test()

    t.animate()

  }
  test(){
    const t=this

    let loader = new THREE.TextureLoader()

    loader.load(
      'test/bake.jpg',
      function(texture){
        console.log(texture)
        new LoaderManager({
          file:'test/model.obj',
          onCompleteCb:(object)=>{
            object.traverse(( child ) => {
              if ( child instanceof THREE.Mesh ) {
                let mesh = new THREE.Mesh(child.geometry, t.mainMaterial.clone())
                mesh.material.map = texture
                t.scene.add(mesh)
              }
            })
          }
        })
      },
      function(pg){
        console.log(pg)
      },
      function ( err ) {
        console.error( err );
      }
    );

    t.setupCamera({
      position : new THREE.Vector3(10,0,0),
      target :  new THREE.Vector3(0,0,0),
      mouseEffect : false,
      fov: 28
    })

    camera = t.camera
  }
}
class LoaderManager{
    constructor(settings){
        const t=this

        t.onProgressCb = defval(settings.onProgressCb, null)

        t.onCompleteCb = defval(settings.onCompleteCb, null)

        t.setupLoader()

        t.loader.load(settings.file, (object)=>{
            t.onCompleteCb(object)
        })

    }
    setupLoader(){
        const t=this

        t.setupManager()

        t.loader = new THREE.OBJLoader(t.manager)

    }
    setupManager(){
        const t=this

        t.manager = new THREE.LoadingManager()

        t.manager.onStart = t.onStart

        t.manager.onLoad = t.onLoad

        t.manager.onProgress = t.onProgress

        t.manager.onError = t.onError

    }
    onStart(url, itemsLoaded, itemsTotal){

        console.log( 'Started loading file: ' + url + '.\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' )
    }
    onLoad(){

        console.log('loaded')

    }
    onProgress(url, itemsLoaded, itemsTotal){

        console.log( 'Loading file: ' + url + '.\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' )
    }
    onError(xhr){
        console.log(xhr)
    }
}


